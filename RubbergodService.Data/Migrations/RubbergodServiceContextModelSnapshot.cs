// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RubbergodService.Data.Entity;

#nullable disable

namespace RubbergodService.Data.Migrations
{
    [DbContext(typeof(RubbergodServiceContext))]
    partial class RubbergodServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RubbergodService.Data.Entity.Karma", b =>
                {
                    b.Property<string>("MemberId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasAnnotation("Relational:JsonPropertyName", "member_ID");

                    b.Property<int>("KarmaValue")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "karma");

                    b.Property<int>("Negative")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "negative");

                    b.Property<int>("Positive")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "positive");

                    b.HasKey("MemberId");

                    b.ToTable("Karma");
                });

            modelBuilder.Entity("RubbergodService.Data.Entity.MemberCacheItem", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "InsertedAt" }, "IX_MembeCacheItem_InsertedAt");

                    b.ToTable("MemberCache");
                });
#pragma warning restore 612, 618
        }
    }
}
